{"message":"unused imports: `buyer::Customer`, `seller::Casher`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":57,"byte_end":72,"line_start":4,"line_end":4,"column_start":22,"column_end":37,"is_primary":true,"text":[{"text":"use models::trader::{buyer::Customer, seller::Casher};","highlight_start":22,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":74,"byte_end":88,"line_start":4,"line_end":4,"column_start":39,"column_end":53,"is_primary":true,"text":[{"text":"use models::trader::{buyer::Customer, seller::Casher};","highlight_start":39,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":36,"byte_end":90,"line_start":4,"line_end":4,"column_start":1,"column_end":55,"is_primary":true,"text":[{"text":"use models::trader::{buyer::Customer, seller::Casher};","highlight_start":1,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `buyer::Customer`, `seller::Casher`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:4:22\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse models::trader::{buyer::Customer, seller::Casher};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"lifetime mismatch","code":{"code":"E0623","explanation":"A lifetime didn't match what was expected.\n\nErroneous code example:\n\n```compile_fail,E0623\nstruct Foo<'a> {\n    x: &'a isize,\n}\n\nfn bar<'short, 'long>(c: Foo<'short>, l: &'long isize) {\n    let _: Foo<'long> = c; // error!\n}\n```\n\nIn this example, we tried to set a value with an incompatible lifetime to\nanother one (`'long` is unrelated to `'short`). We can solve this issue in\ntwo different ways:\n\nEither we make `'short` live at least as long as `'long`:\n\n```\nstruct Foo<'a> {\n    x: &'a isize,\n}\n\n// we set 'short to live at least as long as 'long\nfn bar<'short: 'long, 'long>(c: Foo<'short>, l: &'long isize) {\n    let _: Foo<'long> = c; // ok!\n}\n```\n\nOr we use only one lifetime:\n\n```\nstruct Foo<'a> {\n    x: &'a isize,\n}\nfn bar<'short>(c: Foo<'short>, l: &'short isize) {\n    let _: Foo<'short> = c; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"src\\models\\trader\\buyer.rs","byte_start":322,"byte_end":326,"line_start":17,"line_end":17,"column_start":30,"column_end":34,"is_primary":false,"text":[{"text":"    fn pay(&mut self, money: &u32) -> Result<u32, Box<TradeError>> {","highlight_start":30,"highlight_end":34}],"label":"this parameter and the return type are declared with different lifetimes...","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models\\trader\\buyer.rs","byte_start":331,"byte_end":359,"line_start":17,"line_end":17,"column_start":39,"column_end":67,"is_primary":false,"text":[{"text":"    fn pay(&mut self, money: &u32) -> Result<u32, Box<TradeError>> {","highlight_start":39,"highlight_end":67}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\models\\trader\\buyer.rs","byte_start":417,"byte_end":463,"line_start":19,"line_end":19,"column_start":20,"column_end":66,"is_primary":true,"text":[{"text":"            return Err(Box::new(TradeError::PaymentError(money)));","highlight_start":20,"highlight_end":66}],"label":"...but data from `money` is returned here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"each elided lifetime in input position becomes a distinct lifetime","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider introducing a named lifetime parameter and update trait if needed","code":null,"level":"help","spans":[{"file_name":"src\\models\\trader\\buyer.rs","byte_start":305,"byte_end":305,"line_start":17,"line_end":17,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    fn pay(&mut self, money: &u32) -> Result<u32, Box<TradeError>> {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\models\\trader\\buyer.rs","byte_start":323,"byte_end":323,"line_start":17,"line_end":17,"column_start":31,"column_end":31,"is_primary":true,"text":[{"text":"    fn pay(&mut self, money: &u32) -> Result<u32, Box<TradeError>> {","highlight_start":31,"highlight_end":31}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"src\\models\\trader\\buyer.rs","byte_start":303,"byte_end":303,"line_start":17,"line_end":17,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    fn pay(&mut self, money: &u32) -> Result<u32, Box<TradeError>> {","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0623]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: lifetime mismatch\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\models\\trader\\buyer.rs:19:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn pay(&mut self, money: &u32) -> Result<u32, Box<TradeError>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis parameter and the return type are declared with different lifetimes...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        if &self.wallet < money {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            return Err(Box::new(TradeError::PaymentError(money)));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m...but data from `money` is returned here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: each elided lifetime in input position becomes a distinct lifetime\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter and update trait if needed\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn pay\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m(&\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mmut self, money: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mu32) -> Result<u32, Box<TradeError>> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}
{"message":"aborting due to previous error; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to previous error; 1 warning emitted\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0623`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0623`.\u001b[0m\n"}
